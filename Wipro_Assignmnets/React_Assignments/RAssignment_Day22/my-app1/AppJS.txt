app.js

import './App.css';
import React, { useState } from 'react';
import Card from './Task_1/TASK_1_Card.js';
import LoginForm from './Task_2/TASK_2_LoginForm.js';
import Button from './Task_3/TASK_3_Button.js';
import Dropdown from './Task_4/TASK_4_Dropdown.js';
import Tabs from './Task_5/TASK_5_Tabs.js';


function App() {

  // TASK-1
  const [additionalContent, setAdditionalContent] = useState(''); 
  const [additionalContent1, setAdditionalContent1] = useState('');

  const handleButtonClick = (action) => {
    if (action === 'Follow') {
      setAdditionalContent('You started following this profile!');
    } else if (action === 'Message') {
      setAdditionalContent('Message has been sent');
    }
  };

  const handleButtonClick1 = (action) => {
    if (action === 'Add to Cart') {
      setAdditionalContent1('Your item is added to cart');
    } else if (action === 'Buy Now') {
      setAdditionalContent1('Item is purchased.Thank You!');
    }
  }

  //  TASK-3
    const handleClick = () => {
      alert('Button clicked!');
    };

  //  TASK-4
    const productOptions = ["iPhone", "Samsung Galaxy", "OnePlus", "Google Pixel", "Sony Xperia"];

    const handleSelectionChange = (selectedProducts) => {
      console.log("Selected products:", selectedProducts);
    };

  //  TASK-5
  const initialTabs = [
    { label: "Home", content: "Welcome to the Home tab!" },
    { label: "Profile", content: "This is the Profile tab content." },
    { label: "Settings", content: "Here are your Settings." }
  ];

  const [tabs, setTabs] = useState(initialTabs);

  const handleCloseTab = (index) => {
    if (tabs.length > 1) {
      const updatedTabs = tabs.filter((_, i) => i !== index);
      setTabs(updatedTabs);
    }
  };
  
  return(
    <div className="App">
      <h2>User Profile Card</h2>
      {/* //TASK-1 */}
      <Card
      layout="vertical"
      header={ <div>
                <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="Admin" class="rounded-circle" width="150"/>
              </div>}
      content={
        <div>
          <h4>John Doe</h4>
          <p class="text-secondary mb-1">Full Stack Developer</p>
          <p class="text-muted font-size-sm">Bay Area, San Francisco, CA</p>
        </div>
      }
      footer={
        <div>
          <button class="btn btn-primary" onClick={() => handleButtonClick('Follow')}>Follow</button>
          <button class="btn btn-outline-primary" onClick={() => handleButtonClick('Message')}>Message</button>
        </div>
      }
      />
      <div style={{ marginTop: '20px', fontSize: '18px' }}>
        {additionalContent}
      </div>
      <h2>Product Details Card</h2>
      <Card
        layout="horizontal"
        header={<div>
                  <h4 >Samsung Galaxy S22 Ultra</h4>
                </div>}
        content={<div>
                  <h4 class="text-muted font-size-s">Details Description :</h4>
                  <p class="text-secondary mb-1">1.Flagship smartphone</p>
                  <p class="text-secondary mb-1">2.Premium Design</p>
                  <p class="text-secondary mb-1">3.Dynamic AMOLED 2X</p>
                  <p class="text-secondary mb-1">4.Night Mode & AI Enhancements</p>
                  <p class="text-secondary mb-1">5.Powerful Qualcomm Chipset</p>
                  </div>}
        footer={<div>
                  <button class="btn btn-primary" onClick={() => handleButtonClick1('Add to Cart')}>Add to Cart</button>
                  <button class="btn btn-success" onClick={() => handleButtonClick1('Buy Now')}>Buy Now</button>
                </div>}
      />
      <div style={{ marginTop: '20px',marginLeft:'100px', fontSize: '18px' }}>
        {additionalContent1}
      </div>
      {/* //TASK-2 */}
      {/* <h2>Input Field Component</h2>
      <LoginForm/> */}

      {/* //TASK-3 */}
      <h2>Button Component</h2>
         <div style={{textAlign:'center'}}>
            <input type='text' placeholder='Enter any text' style={{width:'30%',marginBottom:'20px'}}></input><br/>
            <Button label="Click Me!" color="primary" size="medium" onClick={handleClick} />
            <br/>
            <br/>
            <input type='text' placeholder='Enter any text' style={{width:'30%',marginBottom:'20px'}}></input><br/>
            <Button label="Click Me!" color="secondary" size="large" onClick={handleClick} />
        </div>

        {/* //TASK-4 */}
      <h2>Dropdown Component</h2>
      <Dropdown 
        options={productOptions} 
        multiple={false} 
        maxSelection={6}
        onSelectionChange={handleSelectionChange} 
      />
      {/* //TASK-5 */}
      <h2>Tabs Component</h2>
      <Tabs tabs={tabs} showCloseButtons={true} onCloseTab={handleCloseTab} />
    </div>
  )
}

export default App;


//card.js
import React from 'react';
import './TASK_1_Card.css'; 
import 'bootstrap/dist/css/bootstrap.min.css';

const Card = ({ layout, header, content, footer }) => {

  return (
    <div className={`card ${layout === 'horizontal' ? 'horizontal-card' : ''}`}>
      <div className={`row g-0 ${layout === 'horizontal' ? '' : 'flex-column align-items-center'}`}>
        
        <div className={layout === 'horizontal' ? 'col-md-4 d-flex align-items-center justify-content-center' : 'card-header text-center'}>
          {header}
        </div>

        <div className={layout === 'horizontal' ? 'col-md-8' : 'card-body text-center'}>
          {content}
        </div>

        <div className={layout === 'horizontal' ? 'col-md-12 text-center mt-4' : 'card-footer text-center'} >
          {footer}
        </div>
      </div>
    </div>
  );
};

export default Card;


//inputfield.js
import React, { useState } from 'react';
import './TASK_2_InpField.css'; 

const InputField = ({
  inputType = 'text',
  value,
  onChange,
  placeholder,
  label,
  showToggle = false,
}) => {
  const [inputValue, setInputValue] = useState(value || '');
  const [showPassword, setShowPassword] = useState(false);

  const handleInputChange = (e) => {
    const { value } = e.target;
    setInputValue(value);
    onChange && onChange(value);
  };

  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  return (
    <div className="input-field">
      {label && <label>{label}</label>}
      <div className="input-container">
        <input
          type={inputType === 'password' && showPassword ? 'text' : inputType}
          value={inputValue}
          onChange={handleInputChange}
          placeholder={placeholder}
        />
        {inputType === 'password' && showToggle && (
          <button
            type="button"
            onClick={togglePasswordVisibility}
            className="toggle-password"
          >
            {showPassword ? 'Hide' : 'Show'}
          </button>
        )}
      </div>
    </div>
  );
};

export default InputField;


//loginform.js
import React, { useState } from 'react';
import InputField from './TASK_2_InpField'; 

const LoginForm = () => {
  const [password, setPassword] = useState('');

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("Password", password);
  };

  return (
    <form onSubmit={handleSubmit}>
      <InputField
        inputType="password"
        value={password}
        onChange={setPassword}
        placeholder="Enter your password"
        label="Password"
        showToggle={true}
      />
      <button type="submit">Login</button>
    </form>
  );
};

export default LoginForm;



//button.js
import React from 'react';
import './TASK_3_Button.css'; 

const Button = ({ label, color, size, onClick }) => {
  const getSizeClass = () => {
    switch (size) {
      case 'small':
        return 'btn-small';
      case 'medium':
        return 'btn-medium';
      case 'large':
        return 'btn-large';
      default:
        return 'btn-medium'; 
    }
  };

  const getColorClass = () => {
    switch (color) {
      case 'primary':
        return 'btn-primary';
      case 'secondary':
        return 'btn-secondary';
      default:
        return 'btn-primary';
    }
  };

  return (
    <button className={`btn ${getSizeClass()} ${getColorClass()}`} onClick={onClick}>
      {label}
    </button>
  );
};

export default Button;


//dropdown.js
import React, { useState, useEffect } from 'react';
import './TASK_4_Dropdown.css'; 

const Dropdown = ({ options, multiple, maxSelection }) => {
  const [selectedProducts, setSelectedProducts] = useState([]);
  const [error, setError] = useState('');
  const [disableDropdown, setDisableDropdown] = useState(false);

  // Check if maxSelection is more than available options on initial render
  useEffect(() => {
    if (maxSelection > options.length) {
      setError(`Max selection (${maxSelection}) is more than the available options (${options.length}).`);
      setDisableDropdown(true); // disables the dropdown
    } else {
      setError(''); 
      setDisableDropdown(false); // Enable the dropdown
    }
  }, [maxSelection, options.length]);

  const handleProductChange = (event) => {
    const selectedOption = event.target.value;


    if (multiple) {
      if (selectedProducts.includes(selectedOption)) {
        setSelectedProducts(selectedProducts.filter(product => product !== selectedOption));
        setError(''); 
      } else if (selectedProducts.length < maxSelection) {
        setSelectedProducts([...selectedProducts, selectedOption]);
        setError(''); 
      } else {
        setError(`Max selection limit is ${maxSelection}.`); 
      }
    } else {
      setSelectedProducts([selectedOption]);
      setError('');
    }
  };

  return (
    <div id="dropdown-container">
      <div id="product-window">
        {selectedProducts.map((product, index) => (
          <div key={index} className="product-box">{product}</div>
        ))}
      </div>
      <select id="product-dropdown" onChange={handleProductChange} value="" disabled={disableDropdown} >
        <option value="" disabled>Select a product</option>
        {options.map((product) => (
          <option key={product} value={product}>
            {product}
          </option>
        ))}
      </select>
      {error && <p className="error-message">{error}</p>}
    </div>
  );
};

export default Dropdown;


//tabs.js
import React, { useState } from 'react';
import './TASK_5_Tabs.css';

const Tabs = ({ tabs, showCloseButtons, onCloseTab }) => {
    const [activeTab, setActiveTab] = useState(0);
  
    const handleTabClick = (index) => {
      setActiveTab(index);
    };
  
    const handleCloseTab = (index) => {
      if (onCloseTab) {
        onCloseTab(index);
      }
      if (index === activeTab && tabs.length > 1) {
        setActiveTab(activeTab === 0 ? 0 : activeTab - 1);
      }
    };
  
    return (
      <div className="tabs-container">
        <div className="tabs-header">
          {tabs.map((tab, index) => (
            <div
              key={index}
              className={`tab ${index === activeTab ? 'active' : ''}`}
              onClick={() => handleTabClick(index)}
            >
              {tab.label}
              {showCloseButtons && (
                <button className="close-button" onClick={(e) => { e.stopPropagation(); handleCloseTab(index); }}>
                  x
                </button>
              )}
            </div>
          ))}
        </div>
        <div className="tabs-content">
          {tabs[activeTab] && <div>{tabs[activeTab].content}</div>}
        </div>
      </div>
    );
  };
  
export default Tabs;

